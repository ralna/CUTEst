name: Meson
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: ${{ matrix.os }}/${{ matrix.compiler }}-v${{ matrix.version }}/Int${{ matrix.int }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-13]
        arch: ['x64']
        version: ['11']
        int: ['32', '64']
        include:
          - compiler: gcc
          - os: ubuntu-latest
            compiler: intel-classic
            version: '2021.10'
            int: '32'
          - os: ubuntu-latest
            compiler: intel-classic
            version: '2021.10'
            int: '64'
          - os: windows-latest
            compiler: intel
            version: '2023.2'
            int: '32'
          - os: windows-latest
            compiler: intel
            version: '2023.2'
            int: '64'
          - os: ubuntu-latest
            compiler: intel
            version: '2023.2'
            int: '32'
          - os: ubuntu-latest
            compiler: intel
            version: '2023.2'
            int: '64'
          # - os: ubuntu-latest
          #   compiler: nvidia-hpc
          #   version: '24.05'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out CUTEST
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Meson and Ninja
        run: pip install meson ninja

      - name: Set the environment variables CUTEST
        shell: bash
        run: echo "CUTEST=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Install compilers
        uses: fortran-lang/setup-fortran@main
        with:
          compiler: ${{ matrix.compiler }}
          version: ${{ matrix.version }}

      # Uncomment this section to obtain ssh access to VM
      # - name: Setup tmate session
      #   if: matrix.os == 'macos-13'
      #   uses: mxschmitt/action-tmate@v3

      - name: Setup CUTEST
        shell: bash
        run: |
          INT64="false"
          if [[ "${{matrix.int}}" == "64" ]]; then
            INT64="true"
          fi
          meson setup builddir --buildtype=debug \
                               --prefix=$GITHUB_WORKSPACE/cutest \
                               -Dquadruple=true \
                               -Dcutest_int64=$INT64

      - name: Build CUTEST
        shell: bash
        run: |
          meson compile -C builddir
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.os }}_${{ matrix.compiler }}-v${{ matrix.version }}_Int${{ matrix.int }}_meson-log.txt
          path: builddir/meson-logs/meson-log.txt

      - name: Install CUTEST
        shell: bash
        run: |
          meson install -C builddir
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.os }}_${{ matrix.compiler }}-v${{ matrix.version }}_Int${{ matrix.int }}_install-log.txt
          path: builddir/meson-logs/install-log.txt

      - name: Test CUTEST
        shell: bash
        run: |
          meson test -C builddir
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.os }}_${{ matrix.compiler }}-v${{ matrix.version }}_Int${{ matrix.int }}_testlog.txt
          path: builddir/meson-logs/testlog.txt
