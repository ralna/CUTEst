name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v2023.11.15

jobs:
  build:
    name: CUTEst -- Release ${{ github.ref_name }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout CUTEst
        uses: actions/checkout@v4

      - name: Install Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: "1.7"
          arch: x64

      - name: Set the environment variables BINARYBUILDER_AUTOMATIC_APPLE, CUTEST_RELEASE, CUTEST_COMMIT
        shell: bash
        run: |
          echo "BINARYBUILDER_AUTOMATIC_APPLE=true" >> $GITHUB_ENV
          echo "CUTEST_RELEASE=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "CUTEST_COMMIT=${{ github.sha }}" >> $GITHUB_ENV

      - name: Cross-compilation of CUTEst -- x86_64-linux-gnu-libgfortran5
        run: |
          julia --color=yes -e 'using Pkg; Pkg.add("BinaryBuilder")'
          julia --color=yes .github/julia/build_tarballs.jl x86_64-linux-gnu-libgfortran5 --verbose
          rm -r ~/.julia

      - name: Cross-compilation of CUTEst -- x86_64-w64-mingw32-libgfortran5
        run: |
          julia --color=yes -e 'using Pkg; Pkg.add("BinaryBuilder")'
          julia --color=yes .github/julia/build_tarballs.jl x86_64-w64-mingw32-libgfortran5 --verbose
          rm -r ~/.julia

      - name: Cross-compilation of CUTEst -- x86_64-apple-darwin-libgfortran5
        run: |
          julia --color=yes -e 'using Pkg; Pkg.add("BinaryBuilder")'
          julia --color=yes .github/julia/build_tarballs.jl x86_64-apple-darwin-libgfortran5 --verbose
          rm -r ~/.julia

      - name: Cross-compilation of CUTEst -- aarch64-apple-darwin-libgfortran5
        run: |
          julia --color=yes -e 'using Pkg; Pkg.add("BinaryBuilder")'
          julia --color=yes .github/julia/build_tarballs.jl aarch64-apple-darwin-libgfortran5 --verbose
          rm -r ~/.julia

      - name: Generate the binaries
        run: julia --color=yes .github/julia/generate_binaries.jl

      - name: Create GitHub Release
        run: |
          gh release create ${{ github.ref_name }} \
            --title "${{ github.ref_name }}" \
            --notes "" \
            --verify-tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux artifact
        run: |
          gh release upload ${{ github.ref_name }} \
            CUTEst_binaries.${{ github.ref_name }}.x86_64-linux-gnu-libgfortran5.tar.gz#CUTEst.${{ github.ref_name }}.linux.tar.gz
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Mac (Intel) artifact
        run: |
          gh release upload ${{ github.ref_name }} \
            CUTEst_binaries.${{ github.ref_name }}.x86_64-apple-darwin-libgfortran5.tar.gz#CUTEst.${{ github.ref_name }}.mac-intel.tar.gz
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Mac (ARM) artifact
        run: |
          gh release upload ${{ github.ref_name }} \
            CUTEst_binaries.${{ github.ref_name }}.aarch64-apple-darwin-libgfortran5.tar.gz#CUTEst.${{ github.ref_name }}.mac-arm.tar.gz
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows artifact
        run: |
          gh release upload ${{ github.ref_name }} \
            CUTEst_binaries.${{ github.ref_name }}.x86_64-w64-mingw32-libgfortran5.zip#CUTEst.${{ github.ref_name }}.windows.zip
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
