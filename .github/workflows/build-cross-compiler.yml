name: BinaryBuilder.jl

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  actions: write
  contents: read

jobs:
  build:
    name: Build on ${{ matrix.platform }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        platform:
          - x86_64-apple-darwin-libgfortran5
          - aarch64-linux-gnu-libgfortran5
          - aarch64-apple-darwin-libgfortran5
          - x86_64-w64-mingw32-libgfortran5

    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v2
        with:
          version: "1.7"
          arch: x64

      - uses: julia-actions/cache@v2

      - name: Set environment variables
        run: |
          echo "BINARYBUILDER_AUTOMATIC_APPLE=true" >> $GITHUB_ENV
          git fetch --tags
          echo "CUTEST_RELEASE=$(git describe --tags $(git rev-list --tags --max-count=1) | sed 's/^v//')" >> $GITHUB_ENV
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "CUTEST_COMMIT=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
            echo "CUTEST_URL=${{ github.event.pull_request.head.repo.clone_url }}" >> $GITHUB_ENV
          else
            echo "CUTEST_COMMIT=${{ github.sha }}" >> $GITHUB_ENV
            echo "CUTEST_URL=https://github.com/${{ github.repository }}.git" >> $GITHUB_ENV
          fi

      - name: Compile CUTEST_jll.jl for ${{ matrix.platform }}
        run: |
          julia --color=yes -e 'using Pkg; Pkg.add("BinaryBuilder")'
          julia --color=yes .github/julia/build_tarballs_yggdrasil.jl ${{ matrix.platform }} --verbose --deploy=local
