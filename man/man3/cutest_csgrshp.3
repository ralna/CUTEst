'\" e  @(#)cutest_csgrshp v1.5 03/2017;
.TH cutest_csgrshp 3M "30 Mar 2017" "CUTEst user documentation" "CUTEst user documentation"
.SH NAME
CUTEST_csgrshp \- CUTEst tool to evaluate the sparsity patterns of the
constraints gradients and gradient of objective/Lagrangian function,
and the Hessian of the Lagrangian.
.SH SYNOPSIS
.HP 1i
CALL CUTEST_csgrshp( status, n, nnzj, lj, J_var, J_fun, nnzh, lh, H_row, H_col )

.HP 1i
For real rather than double precision arguments, instead

.HP 1i
CALL CUTEST_csgrshp_s( ... )

.HP 1i
and for quadruple precision arguments, when available,

.HP 1i
CALL CUTEST_csgrshp_q( ... )

.SH DESCRIPTION
The CUTEST_csgrshp subroutine evaluates sparsity pattern used when storing the
gradients of the general constraints and of either the objective function
or the Lagrangian function
.EQ
l(x,y) = f(x) + y sup T c(x),
.EN
as well as the Hessian of the Lagrangian function,
corresponding to the problem decoded from a SIF file by the script
\fIsifdecoder\fP.

The problem under consideration
is to minimize or maximize an objective function
.EQ
f(x)
.EN
over all
.EQ
x
.EN
\(mo
.EQ
R sup n
.EN
subject to
general equations
.EQ
c sub i (x) ~=~ 0,
.EN
.EQ
~(i
.EN
\(mo
.EQ
{ 1 ,..., m sub E } ),
.EN
general inequalities
.EQ
c sub i sup l ~<=~ c sub i (x) ~<=~ c sub i sup u,
.EN
.EQ
~(i
.EN
\(mo
.EQ
{ m sub E + 1 ,..., m }),
.EN
and simple bounds
.EQ
x sup l ~<=~ x ~<=~ x sup u.
.EN
The objective function is group-partially separable and
all constraint functions are partially separable.
.LP
.SH ARGUMENTS
The arguments of CUTEST_csgrshp are as follows
.TP 5
.B status \fP[out] - integer
the outputr status: 0 for a succesful call, 1 for an array
allocation/deallocation error, 2 for an array bound error,
3 for an evaluation error,
.TP
.B n \fP[in] - integer
the number of variables for the problem,
.TP
.B nnzj \fP[out] - integer
the number of nonzeros in J_var and J_fun,
.TP
.B lj \fP[in] - integer
the actual declared dimensions of J_var and J_fun,
.TP
.B J_var \fP[out] - integer
an array whose i-th component is the index of the variable with
respect to which the derivative is taken,
.TP
.B J_fun \fP[out] - integer
an array whose i-th component is the index of the problem function
whose derivative is taken. J_fun(i) = 0 indicates the
objective or Lagrangian function, while J_fun(i) = j > 0 indicates the
j-th general constraint function.
.TP
.B nnzh \fP[out] - integer
the number of nonzeros in the Hessian matrix,
.TP
.B lh \fP[in] - integer
the actual declared dimensions of H_row and H_col,
.TP
.B H_row \fP[out] - integer
an array which gives the row indices of the nonzeros of the Hessian
matrix of the Lagrangian function; only the upper triangular part of the
Hessian is stored, and
.TP
.B H_col \fP[out] - integer
an array which gives the column indices of the nonzeros of the Hessian
matrix of the Lagrangian function corresponding to the row indices in H_row.
.LP
.SH AUTHORS
I. Bongartz, A.R. Conn, N.I.M. Gould, D. Orban and Ph.L. Toint
.SH "SEE ALSO"
\fICUTEst: a Constrained and Unconstrained Testing
Environment with safe threads\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   Computational Optimization and Applications \fB60\fP:3, pp.545-557, 2014.

\fICUTEr (and SifDec): A Constrained and Unconstrained Testing
Environment, revisited\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   ACM TOMS, \fB29\fP:4, pp.373-394, 2003.

\fICUTE: Constrained and Unconstrained Testing Environment\fP,
   I. Bongartz, A.R. Conn, N.I.M. Gould and Ph.L. Toint,
   ACM TOMS, \fB21\fP:1, pp.123-160, 1995.

cutest_csgrsh(3M), sifdecoder(1).
