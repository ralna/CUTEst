'\" e  @(#)cutest_cgrdh_threaded v1.0 12/2012;
.TH cutest_cgrdh_threaded 3M "31 Dec 2012" "CUTEst user documentation" "CUTEst user documentation"
.SH NAME
CUTEST_cgrdh_threaded \- CUTEst tool to evaluate constraints gradients, 
Hessian of Lagrangian function and gradient of objective/Lagrangian function.
.SH SYNOPSIS
.HP 1i
CALL CUTEST_cgrdh_threaded( status, n, m, X, Y, grlagf, G, jtrans,
lj1, lj2, J_val, lh1, H_val, thread )

.HP 1i
For real rather than double precision arguments, instead

.HP 1i
CALL CUTEST_cgrdh_threaded_s( ... )

.HP 1i
and for quadruple precision arguments, when available,

.HP 1i
CALL CUTEST_cgrdh_threaded_q( ... )

.SH DESCRIPTION
The CUTEST_cgrdh_threaded subroutine evaluates the gradients of the general
constraints and of either the objective function 
.EQ
f(x)
.EN
or the Lagrangian function 
.EQ
l(x,y) = f(x) + y sup T c(x)
.EN
corresponding to the problem decoded from a SIF file by the script
\fIsifdecoder\fP at the point
.EQ
(x,y) = 
.EN
(X,Y).
It also evaluates the Hessian matrix
of the Lagrangian function at 
.EQ
(x,y).
.EN
The gradients and matrices are stored in a dense format.

The problem under consideration
is to minimize or maximize an objective function
.EQ
f(x)
.EN
over all
.EQ
x
.EN
\(mo
.EQ
R sup n
.EN
subject to
general equations
.EQ
c sub i (x) ~=~ 0,
.EN
.EQ
~(i
.EN
\(mo
.EQ
{ 1 ,..., m sub E } ),
.EN
general inequalities
.EQ
c sub i sup l ~<=~ c sub i (x) ~<=~ c sub i sup u,
.EN
.EQ
~(i
.EN
\(mo
.EQ
{ m sub E + 1 ,..., m }),
.EN
and simple bounds
.EQ
x sup l ~<=~ x ~<=~ x sup u.
.EN
The objective function is group-partially separable and 
all constraint functions are partially separable.

.LP 
.SH ARGUMENTS
The arguments of CUTEST_cgrdh_threaded are as follows
.TP 5
.B status \fP[out] - integer
the outputr status: 0 for a succesful call, 1 for an array 
allocation/deallocation error, 2 for an array bound error,
3 for an evaluation error, 4 for an out-of-range thread,
.TP
.B n \fP[in] - integer
the number of variables for the problem,
.TP
.B m \fP[in] - integer
the total number of general constraints,
.TP
.B X \fP[in] - real/double precision
an array which gives the current estimate of the solution of the
problem,
.TP
.B Y \fP[in] - real/double precision
an array which should give the Lagrange multipliers whenever grlagf is
set .TRUE. but need not otherwise be set,
.TP
.B grlagf \fP[in] - logical
a logical variable which should be set .TRUE. if the gradient of the
Lagrangian function is required and .FALSE. if the gradient of the
objective function is sought,
.TP
.B G \fP[out] - real/double precision
an array which gives the value of the gradient of the objective
function evaluated at X (GRLAGF = .FALSE.) or of the Lagrangian
function evaluated at X and Y (GRLAGF = .TRUE.),
.TP
.B jtrans \fP[in] - logical
a logical variable which should be set to .TRUE. if the transpose of
the constraint Jacobian is required and to .FALSE. if the Jacobian
itself is wanted. The Jacobian matrix is the matrix whose i-th row is
the gradient of the i-th constraint function,
.TP
.B lj1 \fP[in] - integer
the actual declared size of the leading dimension of J_val (with lj1
no smaller than n if jtrans is .TRUE. or m if jtrans is .FALSE.),
.TP
.B lj2 \fP[in] - integer
the actual declared size of the second dimension of J_val (with lj2
no smaller than m if jtrans is .TRUE. or n if jtrans is .FALSE.),
.TP
.B J_val \fP[out] - real/double precision
a two-dimensional array of dimension (lj1, lj2) which gives the
value of the Jacobian matrix of the constraint functions, or its
transpose, evaluated at X. If jtrans is .TRUE., the i,j-th component
of the array will contain the i-th derivative of the j-th constraint
function. Otherwise, if jtrans is .FALSE., the i,j-th component of the
array will contain the j-th derivative of the i-th constraint
function.
.TP
.B lh1 \fP[in] - integer
the actual declared size of the leading dimension of H_val (with lh1 no
smaller than n),
.TP
.B H_val \fP[out] - real/double precision
a two-dimensional array which gives the value of the Hessian matrix of
the Lagrangian function evaluated at X and Y,
.TP
.B thread \fP[in] - integer
thread chosen for the evaluation; threads are numbered
from 1 to the value threads set when calling CUTEST_csetup_threaded.
.LP
.SH AUTHORS
I. Bongartz, A.R. Conn, N.I.M. Gould, D. Orban and Ph.L. Toint
.SH "SEE ALSO"
\fICUTEst: a Constrained and Unconstrained Testing 
Environment with safe threads\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   Computational Optimization and Applications \fB60\fP:3, pp.545-557, 2014.

\fICUTEr (and SifDec): A Constrained and Unconstrained Testing
Environment, revisited\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   ACM TOMS, \fB29\fP:4, pp.373-394, 2003.

\fICUTE: Constrained and Unconstrained Testing Environment\fP,
   I. Bongartz, A.R. Conn, N.I.M. Gould and Ph.L. Toint, 
   ACM TOMS, \fB21\fP:1, pp.123-160, 1995.

cutest_ugrdh_threaded(3M), sifdecoder(1).
