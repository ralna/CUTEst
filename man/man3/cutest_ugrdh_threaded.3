'\" e  @(#)cutest_ugrdh_threaded v1.0 12/2012;
.TH cutest_ugrdh_threaded 3M "31 Dec 2012" "CUTEst user documentation" "CUTEst user documentation"
.SH NAME
CUTEST_ugrdh_threaded \- CUTEst tool to evaluate the gradient and 
Hessian matrix.
.SH SYNOPSIS
.HP 1i
CALL CUTEST_ugrdh_threaded( status, n, X, G, lh1, H_val, thread )

.HP 1i
For real rather than double precision arguments, instead

.HP 1i
CALL CUTEST_ugrdh_threaded_s( ... )

.HP 1i
and for quadruple precision arguments, when available,

.HP 1i
CALL CUTEST_ugrdh_threaded_q( ... )

.SH DESCRIPTION
The CUTEST_ugrdh_threaded subroutine evaluates the gradient and Hessian matrix 
of the objective function of the problem decoded from a SIF file by the
script \fIsifdecoder\fP at the point X.
This Hessian matrix is stored as a dense matrix.

The problem under consideration
is to minimize or maximize an objective function
.EQ
f(x)
.EN
over all
.EQ
x
.EN
\(mo
.EQ
R sup n
.EN
subject to the simple bounds
.EQ
x sup l ~<=~ x ~<=~ x sup u.
.EN
The objective function is group-partially separable.

.LP 
.SH ARGUMENTS
The arguments of CUTEST_ugrdh_threaded are as follows
.TP 5
.B status \fP[out] - integer
the outputr status: 0 for a succesful call, 1 for an array 
allocation/deallocation error, 2 for an array bound error,
3 for an evaluation error, 4 for an out-of-range thread,
.TP
.B n \fP[in] - integer
the number of variables for the problem,
.TP
.B X \fP[in] - real/double precision
an array which gives the current estimate of the solution of the
problem,
.TP
.B G \fP[out] - real/double precision
an array which gives the value of the gradient of the objective
function evaluated at X,
.TP
.B lh1 \fP[in] - integer
the actual declared size of the leading dimension of H_val (with lh1 no
smaller than N),
.TP
.B H_val \fP[out] - real/double precision
a two-dimensional array which gives the value of the Hessian matrix of
the objective function evaluated at X,
.TP
.B thread \fP[inout] - integer
thread chosen for the evaluation; threads are numbered
from 1 to the value threads set when calling CUTEST_usetup_threaded.
.LP
.SH NOTE
Calling this routine is more efficient than separate calls to 
CUTEST_ugr_threaded and CUTEST_udh_threaded.
.LP
.SH AUTHORS
I. Bongartz, A.R. Conn, N.I.M. Gould, D. Orban and Ph.L. Toint
.SH "SEE ALSO"
\fICUTEst: a Constrained and Unconstrained Testing 
Environment with safe threads\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   Computational Optimization and Applications \fB60\fP:3, pp.545-557, 2014.

\fICUTEr (and SifDec): A Constrained and Unconstrained Testing
Environment, revisited\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   ACM TOMS, \fB29\fP:4, pp.373-394, 2003.

\fICUTE: Constrained and Unconstrained Testing Environment\fP,
   I. Bongartz, A.R. Conn, N.I.M. Gould and Ph.L. Toint, 
   ACM TOMS, \fB21\fP:1, pp.123-160, 1995.

cutest_cgrdh_threaded(3M), sifdecoder(1).
